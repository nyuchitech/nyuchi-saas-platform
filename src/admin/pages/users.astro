---
import Layout from '../../core/layouts/Layout.astro';
import Header from '../components/Header.astro';
---

<Layout title="User Management - Admin Dashboard">
  <Header />
  
  <main class="min-h-screen bg-gray-50">
    <div class="container mx-auto px-4 sm:px-6 lg:px-8 py-8">
      <!-- Dashboard Header -->
      <div class="flex items-center justify-between mb-8">
        <div>
          <h1 class="text-3xl font-bold text-gray-900 mb-2">User Management</h1>
          <p class="text-gray-600">Manage users, roles, and permissions across the platform</p>
        </div>
        <div class="flex space-x-3">
          <a href="/dashboard" class="btn btn-secondary">‚Üê Back to Dashboard</a>
          <button class="btn btn-primary" onclick="showCreateUserModal()">+ Create User</button>
        </div>
      </div>

      <!-- Filters and Search -->
      <div class="bg-white rounded-lg shadow mb-6">
        <div class="p-6">
          <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
            <div>
              <label for="search" class="block text-sm font-medium text-gray-700 mb-2">Search Users</label>
              <input type="text" id="search" placeholder="Search by email..." 
                     class="w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
            </div>
            <div>
              <label for="role-filter" class="block text-sm font-medium text-gray-700 mb-2">Filter by Role</label>
              <select id="role-filter" class="w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
                <option value="">All Roles</option>
                <option value="super_admin">Super Admin</option>
                <option value="admin">Admin</option>
                <option value="manager">Manager</option>
                <option value="user">User</option>
                <option value="viewer">Viewer</option>
              </select>
            </div>
            <div>
              <label for="status-filter" class="block text-sm font-medium text-gray-700 mb-2">Filter by Status</label>
              <select id="status-filter" class="w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
                <option value="">All Statuses</option>
                <option value="active">Active</option>
                <option value="inactive">Inactive</option>
                <option value="suspended">Suspended</option>
              </select>
            </div>
            <div class="flex items-end">
              <button onclick="applyFilters()" class="btn btn-primary w-full">Apply Filters</button>
            </div>
          </div>
        </div>
      </div>

      <!-- Role Overview Cards -->
      <div class="grid grid-cols-1 md:grid-cols-5 gap-4 mb-8">
        <div class="bg-white rounded-lg shadow p-6">
          <div class="flex items-center">
            <div class="w-10 h-10 bg-red-100 rounded-lg flex items-center justify-center mr-3">
              <svg class="w-6 h-6 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z" />
              </svg>
            </div>
            <div>
              <p class="text-sm font-medium text-gray-600">Super Admins</p>
              <p class="text-2xl font-bold text-gray-900" id="super-admin-count">2</p>
            </div>
          </div>
        </div>

        <div class="bg-white rounded-lg shadow p-6">
          <div class="flex items-center">
            <div class="w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center mr-3">
              <svg class="w-6 h-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z" />
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
              </svg>
            </div>
            <div>
              <p class="text-sm font-medium text-gray-600">Admins</p>
              <p class="text-2xl font-bold text-gray-900" id="admin-count">8</p>
            </div>
          </div>
        </div>

        <div class="bg-white rounded-lg shadow p-6">
          <div class="flex items-center">
            <div class="w-10 h-10 bg-green-100 rounded-lg flex items-center justify-center mr-3">
              <svg class="w-6 h-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
              </svg>
            </div>
            <div>
              <p class="text-sm font-medium text-gray-600">Managers</p>
              <p class="text-2xl font-bold text-gray-900" id="manager-count">24</p>
            </div>
          </div>
        </div>

        <div class="bg-white rounded-lg shadow p-6">
          <div class="flex items-center">
            <div class="w-10 h-10 bg-purple-100 rounded-lg flex items-center justify-center mr-3">
              <svg class="w-6 h-6 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z" />
              </svg>
            </div>
            <div>
              <p class="text-sm font-medium text-gray-600">Users</p>
              <p class="text-2xl font-bold text-gray-900" id="user-count">156</p>
            </div>
          </div>
        </div>

        <div class="bg-white rounded-lg shadow p-6">
          <div class="flex items-center">
            <div class="w-10 h-10 bg-gray-100 rounded-lg flex items-center justify-center mr-3">
              <svg class="w-6 h-6 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
              </svg>
            </div>
            <div>
              <p class="text-sm font-medium text-gray-600">Viewers</p>
              <p class="text-2xl font-bold text-gray-900" id="viewer-count">43</p>
            </div>
          </div>
        </div>
      </div>

      <!-- Users Table -->
      <div class="bg-white rounded-lg shadow">
        <div class="p-6 border-b border-gray-200">
          <h3 class="text-lg font-bold text-gray-900">All Users</h3>
        </div>
        <div class="overflow-x-auto">
          <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-gray-50">
              <tr>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">User</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Role</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Last Login</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Organization</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
              </tr>
            </thead>
            <tbody id="users-table-body" class="bg-white divide-y divide-gray-200">
              <!-- Users will be loaded here -->
            </tbody>
          </table>
        </div>
        
        <!-- Pagination -->
        <div class="bg-white px-4 py-3 flex items-center justify-between border-t border-gray-200 sm:px-6">
          <div class="flex-1 flex justify-between sm:hidden">
            <button class="relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
              Previous
            </button>
            <button class="ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
              Next
            </button>
          </div>
          <div class="hidden sm:flex-1 sm:flex sm:items-center sm:justify-between">
            <div>
              <p class="text-sm text-gray-700">
                Showing <span class="font-medium">1</span> to <span class="font-medium">10</span> of <span class="font-medium">233</span> results
              </p>
            </div>
            <div>
              <nav class="relative z-0 inline-flex rounded-md shadow-sm -space-x-px" aria-label="Pagination">
                <button class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                  Previous
                </button>
                <button class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50">
                  1
                </button>
                <button class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-blue-50 text-sm font-medium text-blue-600 hover:bg-gray-50">
                  2
                </button>
                <button class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50">
                  3
                </button>
                <button class="relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                  Next
                </button>
              </nav>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Create User Modal -->
    <div id="create-user-modal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden">
      <div class="flex items-center justify-center min-h-screen px-4">
        <div class="bg-white rounded-lg shadow-xl max-w-md w-full">
          <div class="p-6">
            <h3 class="text-lg font-bold text-gray-900 mb-4">Create New User</h3>
            
            <form id="create-user-form">
              <div class="mb-4">
                <label for="user-email" class="block text-sm font-medium text-gray-700 mb-2">Email</label>
                <input type="email" id="user-email" required
                       class="w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
              </div>
              
              <div class="mb-4">
                <label for="user-role" class="block text-sm font-medium text-gray-700 mb-2">Role</label>
                <select id="user-role" required
                        class="w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
                  <option value="">Select Role</option>
                  <option value="admin">Admin</option>
                  <option value="manager">Manager</option>
                  <option value="user">User</option>
                  <option value="viewer">Viewer</option>
                </select>
              </div>
              
              <div class="mb-6">
                <label for="user-org" class="block text-sm font-medium text-gray-700 mb-2">Organization</label>
                <select id="user-org"
                        class="w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
                  <option value="">Current Organization</option>
                </select>
              </div>
              
              <div class="flex space-x-3">
                <button type="button" onclick="hideCreateUserModal()" class="flex-1 btn btn-secondary">Cancel</button>
                <button type="submit" class="flex-1 btn btn-primary">Create User</button>
              </div>
            </form>
          </div>
        </div>
      </div>
    </div>
  </main>

  <script>
    // User management functions
    let currentPage = 1;
    let filters = {};

    function showCreateUserModal() {
      document.getElementById('create-user-modal').classList.remove('hidden');
    }

    function hideCreateUserModal() {
      document.getElementById('create-user-modal').classList.add('hidden');
      document.getElementById('create-user-form').reset();
    }

    function applyFilters() {
      filters = {
        search: document.getElementById('search').value,
        role: document.getElementById('role-filter').value,
        status: document.getElementById('status-filter').value
      };
      currentPage = 1;
      loadUsers();
    }

    async function loadUsers() {
      try {
        const response = await fetch('/api/admin/users/list', {
          method: 'POST',
          headers: {
            'Authorization': 'Bearer admin-token', // In production, get from auth state
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            page: currentPage,
            limit: 20,
            ...filters
          })
        });

        if (response.ok) {
          const data = await response.json();
          renderUsersTable(data.data.users);
        } else {
          alert('Failed to load users');
        }
      } catch (error) {
        console.error('Error loading users:', error);
        alert('Error loading users');
      }
    }

    function renderUsersTable(users) {
      const tbody = document.getElementById('users-table-body');
      tbody.innerHTML = '';

      users.forEach(user => {
        const row = document.createElement('tr');
        row.innerHTML = `
          <td class="px-6 py-4 whitespace-nowrap">
            <div class="flex items-center">
              <div class="w-10 h-10 bg-gray-200 rounded-full flex items-center justify-center mr-3">
                <span class="text-sm font-medium text-gray-600">${user.email.charAt(0).toUpperCase()}</span>
              </div>
              <div>
                <div class="text-sm font-medium text-gray-900">${user.email}</div>
                <div class="text-sm text-gray-500">ID: ${user.id}</div>
              </div>
            </div>
          </td>
          <td class="px-6 py-4 whitespace-nowrap">
            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getRoleBadgeClass(user.role)}">
              ${user.role.replace('_', ' ').toUpperCase()}
            </span>
          </td>
          <td class="px-6 py-4 whitespace-nowrap">
            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusBadgeClass(user.status)}">
              ${user.status.toUpperCase()}
            </span>
          </td>
          <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
            ${user.last_login_at ? new Date(user.last_login_at).toLocaleDateString() : 'Never'}
          </td>
          <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
            ${user.organization_id}
          </td>
          <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
            <div class="flex space-x-2">
              <button onclick="editUser('${user.id}')" class="text-blue-600 hover:text-blue-900">Edit</button>
              <button onclick="managePermissions('${user.id}')" class="text-green-600 hover:text-green-900">Permissions</button>
              ${user.status === 'active' ? 
                `<button onclick="suspendUser('${user.id}')" class="text-red-600 hover:text-red-900">Suspend</button>` :
                `<button onclick="activateUser('${user.id}')" class="text-green-600 hover:text-green-900">Activate</button>`
              }
            </div>
          </td>
        `;
        tbody.appendChild(row);
      });
    }

    function getRoleBadgeClass(role) {
      const classes = {
        'super_admin': 'bg-red-100 text-red-800',
        'admin': 'bg-blue-100 text-blue-800',
        'manager': 'bg-green-100 text-green-800',
        'user': 'bg-purple-100 text-purple-800',
        'viewer': 'bg-gray-100 text-gray-800'
      };
      return classes[role] || 'bg-gray-100 text-gray-800';
    }

    function getStatusBadgeClass(status) {
      const classes = {
        'active': 'bg-green-100 text-green-800',
        'inactive': 'bg-yellow-100 text-yellow-800',
        'suspended': 'bg-red-100 text-red-800'
      };
      return classes[status] || 'bg-gray-100 text-gray-800';
    }

    async function suspendUser(userId) {
      if (!confirm('Are you sure you want to suspend this user?')) return;
      
      try {
        const response = await fetch('/api/admin/users/suspend', {
          method: 'POST',
          headers: {
            'Authorization': 'Bearer admin-token',
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            user_id: userId,
            reason: 'Suspended by admin'
          })
        });

        if (response.ok) {
          alert('User suspended successfully');
          loadUsers();
        } else {
          alert('Failed to suspend user');
        }
      } catch (error) {
        alert('Error suspending user');
      }
    }

    async function activateUser(userId) {
      try {
        const response = await fetch('/api/admin/users/activate', {
          method: 'POST',
          headers: {
            'Authorization': 'Bearer admin-token',
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ user_id: userId })
        });

        if (response.ok) {
          alert('User activated successfully');
          loadUsers();
        } else {
          alert('Failed to activate user');
        }
      } catch (error) {
        alert('Error activating user');
      }
    }

    // Form submission
    document.getElementById('create-user-form').addEventListener('submit', async function(e) {
      e.preventDefault();
      
      const email = document.getElementById('user-email').value;
      const role = document.getElementById('user-role').value;
      
      try {
        const response = await fetch('/api/admin/users/create', {
          method: 'POST',
          headers: {
            'Authorization': 'Bearer admin-token',
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ email, role })
        });

        if (response.ok) {
          alert('User created successfully');
          hideCreateUserModal();
          loadUsers();
        } else {
          const error = await response.json();
          alert(error.message || 'Failed to create user');
        }
      } catch (error) {
        alert('Error creating user');
      }
    });

    // Load users on page load
    document.addEventListener('DOMContentLoaded', function() {
      loadUsers();
    });
  </script>
</Layout>
